{"ast":null,"code":"import _classCallCheck from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/src/components/content/menu/EditMenu.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../configs/api.config.json';\nimport ConfirmModal from './ConfirmModal';\n\nvar EditMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditMenu, _React$Component);\n\n  function EditMenu(props) {\n    var _this;\n\n    _classCallCheck(this, EditMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditMenu).call(this, props));\n\n    _this.changeHandler = function (e) {\n      var tmp = _this.state.formdata;\n      tmp[e.target.name] = e.target.value;\n\n      _this.setState({\n        formdata: tmp\n      });\n    };\n\n    _this.trimString = function (str) {\n      return str.replace(/^\\s+|\\s+$/gm, '');\n    };\n\n    _this.successHandler = function () {\n      _this.setState({\n        isSuccess: true\n      });\n    };\n\n    _this.submitHandler = function () {\n      _this.setState({\n        confirmStatus: true\n      });\n\n      React.createElement(ConfirmModal, {\n        confirm: _this.state.confirmStatus,\n        successHandler: _this.successHandler,\n        closeModal: _this.props.closeModalHandler,\n        code: _this.state.formdata.code_edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n\n      if (isSuccess) {\n        var token = localStorage.getItem(apiconfig.LS.TOKEN);\n        var tmp = _this.state.formdata;\n        tmp.name_edit = _this.trimString(_this.state.formdata.name_edit);\n        tmp.controller_edit = _this.trimString(_this.state.formdata.controller_edit);\n\n        _this.setState({\n          formdata: tmp\n        });\n\n        if (_this.state.formdata.name_edit === \"\") {\n          alert('Please add menu name first');\n        } else if (_this.state.formdata.controller_edit === \"\") {\n          alert('Please add menu controller first');\n        } else {\n          _this.setState({\n            disableStatus: true\n          });\n\n          var option = {\n            url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.M_MENU,\n            method: \"put\",\n            headers: {\n              \"authorization\": token,\n              \"Content-Type\": \"application/json\"\n            },\n            data: {\n              code: _this.state.formdata.code_edit,\n              name: _this.state.formdata.name_edit,\n              controller: _this.state.formdata.controller_edit,\n              parent_id: _this.state.formdata.parent_id_edit,\n              updated_by: _this.state.updated_by\n            }\n          };\n          axios(option).then(function (response) {\n            var sucMessage = React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, \"Data Updated! \"), \"Data menu \", React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, _this.props.menu.code_edit), \" has been updated!\");\n            var errMessage = React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, \"Updating data \", React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, _this.props.menu.code_edit), \" unsuccessfull\");\n\n            if (response.data.code === 200) {\n              _this.setState({\n                confirmStatus: false\n              });\n\n              _this.props.closeModalHandler();\n\n              _this.props.spaFunc();\n\n              _this.props.modalStatus(1, sucMessage);\n            } else {\n              _this.props.modalStatus(2, errMessage);\n            }\n\n            _this.setState({\n              disableStatus: false\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      }\n    };\n\n    var userdata = JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA));\n    _this.state = {\n      formdata: {\n        code_edit: '',\n        name_edit: '',\n        controller_edit: '',\n        parent_id_edit: ''\n      },\n      updated_by: userdata.username,\n      isSuccess: false,\n      confirmStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(EditMenu, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(data) {\n      this.setState({\n        formdata: data.menu,\n        isSuccess: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        isOpen: this.props.edit,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        className: \"bg-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Edit Menu - \", this.props.oriMenu.name, \" (\", this.state.formdata.code_edit, \") \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Menu Code *\"), React.createElement(\"td\", {\n        style: {\n          padding: '0 25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \":\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        disabled: true,\n        name: \"code_edit\",\n        value: this.state.formdata.code_edit,\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Menu Name *\"), React.createElement(\"td\", {\n        style: {\n          padding: '0 25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \":\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"name_edit\",\n        value: this.state.formdata.name_edit,\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Controller Name *\"), React.createElement(\"td\", {\n        style: {\n          padding: '0 25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \":\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"controller_edit\",\n        value: this.state.formdata.controller_edit,\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Parent\"), React.createElement(\"td\", {\n        style: {\n          padding: '0 25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \":\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        disabled: true,\n        name: \"parent_id_edit\",\n        value: this.state.formdata.parent_id_edit,\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        color: \"warning\",\n        onClick: this.props.closeModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return EditMenu;\n}(React.Component);\n\nexport default EditMenu;","map":{"version":3,"sources":["/home/mifadhilah/Documents/XSIS/Mini Project/marcom/front-end/src/components/content/menu/EditMenu.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","ConfirmModal","EditMenu","props","changeHandler","e","tmp","state","formdata","target","name","value","setState","trimString","str","replace","successHandler","isSuccess","submitHandler","confirmStatus","closeModalHandler","code_edit","token","localStorage","getItem","LS","TOKEN","name_edit","controller_edit","alert","disableStatus","option","url","BASE_URL","ENDPOINTS","M_MENU","method","headers","data","code","controller","parent_id","parent_id_edit","updated_by","then","response","sucMessage","menu","errMessage","spaFunc","modalStatus","catch","error","console","log","userdata","JSON","parse","USERDATA","username","edit","className","oriMenu","padding","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap'\nimport axios from 'axios'\nimport apiconfig from '../../../configs/api.config.json'\nimport ConfirmModal from './ConfirmModal'\n\nclass EditMenu extends React.Component {\n    constructor(props) {\n        super(props)\n        let userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))     \n        this.state = {\n            formdata: {\n                code_edit: '', \n                name_edit: '',\n                controller_edit: '',\n                parent_id_edit: ''\n            },\n            updated_by: userdata.username,\n            isSuccess : false,\n            confirmStatus : false\n        }\n    }\n\n    changeHandler = (e) => {\n        let tmp = this.state.formdata\n        tmp[e.target.name] = e.target.value\n        this.setState({\n            formdata:tmp\n        })\n    }\n\n    componentWillReceiveProps(data) {\n        this.setState({\n            formdata: data.menu,\n            isSuccess: false\n        })\n    }\n\n    trimString = (str) => {\n        return str.replace(/^\\s+|\\s+$/gm,'')\n    }\n\n    successHandler = () => {\n        this.setState({\n            isSuccess: true\n        })\n    }\n\n    submitHandler = () => {\n        this.setState({ confirmStatus: true });\n        <ConfirmModal \n            confirm = {this.state.confirmStatus}\n            successHandler = {this.successHandler}\n            closeModal = {this.props.closeModalHandler}\n            code = {this.state.formdata.code_edit} />\n        if (isSuccess) {\n            let token = localStorage.getItem(apiconfig.LS.TOKEN)\n            let tmp = this.state.formdata\n            tmp.name_edit = this.trimString(this.state.formdata.name_edit)\n            tmp.controller_edit = this.trimString(this.state.formdata.controller_edit)\n            this.setState({\n                formdata: tmp\n            })\n            \n            if ( this.state.formdata.name_edit === \"\" ) {\n                alert('Please add menu name first')\n            } else if (this.state.formdata.controller_edit === \"\") {\n                alert('Please add menu controller first')\n            }\n            else {\n                this.setState({ disableStatus: true })\n                let option = {\n                    url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.M_MENU,\n                    method: \"put\",\n                    headers: {\n                        \"authorization\": token,\n                        \"Content-Type\" : \"application/json\"\n                    },\n                    data: {\n                        code: this.state.formdata.code_edit,\n                        name: this.state.formdata.name_edit,\n                        controller: this.state.formdata.controller_edit,\n                        parent_id: this.state.formdata.parent_id_edit,\n                        updated_by: this.state.updated_by\n                    }\n                }\n                axios(option)\n                .then((response) => {\n                    let sucMessage = <span><b>Data Updated! </b>Data menu <b>{this.props.menu.code_edit}</b> has been updated!</span>\n                    let errMessage = <span>Updating data <b>{this.props.menu.code_edit}</b> unsuccessfull</span>\n                    if(response.data.code === 200) {\n                        this.setState({ confirmStatus: false })\n                        this.props.closeModalHandler()\n                        this.props.spaFunc()\n                        this.props.modalStatus(1, sucMessage)\n                    } else {\n                        this.props.modalStatus(2, errMessage)\n                    }\n                    this.setState({ disableStatus: false })\n                })\n                .catch((error) => {\n                    console.log(error);            \n                })\n            }\n        }\n    }\n\n    render(){\n        return(\n            <Modal isOpen={this.props.edit} className={this.props.className}>\n                <ModalHeader className=\"bg-primary\"> Edit Menu - {this.props.oriMenu.name} ({this.state.formdata.code_edit}) </ModalHeader>\n                <ModalBody>\n                <table align=\"center\">\n                    <tr>\n                        <td>Menu Code *</td>\n                        <td style={{padding: '0 25px'}}>:</td>\n                        <td>\n                            <div class =\"input-group\">\n                                <input type=\"text\" class=\"form-control\" disabled\n                                name=\"code_edit\" value={this.state.formdata.code_edit} onChange={this.changeHandler} required />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Menu Name *</td>\n                        <td style={{padding: '0 25px'}}>:</td>\n                        <td>\n                            <div class =\"input-group\">\n                                <input type=\"text\" class=\"form-control\" \n                                name=\"name_edit\" value={this.state.formdata.name_edit} onChange={this.changeHandler} required/>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Controller Name *</td>\n                        <td style={{padding: '0 25px'}}>:</td>\n                        <td>\n                            <div class =\"input-group\">\n                                <input type=\"text\" class=\"form-control\"\n                                name=\"controller_edit\" value={this.state.formdata.controller_edit} onChange={this.changeHandler} required />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Parent</td>\n                        <td style={{padding: '0 25px'}}>:</td>\n                        <td>\n                            <div class =\"input-group\">\n                                <input type=\"text\" class=\"form-control\" disabled \n                                name=\"parent_id_edit\" value={this.state.formdata.parent_id_edit} onChange={this.changeHandler} required/>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick ={this.submitHandler}>Update</Button>\n                    <Button color=\"warning\" onClick={this.props.closeModalHandler}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\nexport default EditMenu"]},"metadata":{},"sourceType":"module"}