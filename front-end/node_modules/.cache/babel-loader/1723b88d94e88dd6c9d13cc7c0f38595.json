{"ast":null,"code":"import _regeneratorRuntime from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/markom-apps/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mifadhilah/Documents/XSIS/Mini Project/marcom/markom-apps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport apiconfig from '../configs/api.config.json';\nvar API = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(username, password) {\n      var option, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              option = {\n                url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.LOGIN,\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: {\n                  username: username,\n                  password: password\n                }\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return axios(option);\n\n            case 4:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0.response.data);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 8]]);\n    }));\n\n    return function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    };\n  }(),\n  company: function () {\n    var _company = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(code, name, created_date, created_by) {\n      var token, option, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem(apiconfig.LS.TOKEN);\n              option = {\n                url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.COMPANY,\n                method: \"GET\",\n                headers: {\n                  \"authorization\": token\n                },\n                data: {\n                  code: code,\n                  name: name,\n                  created_date: created_date,\n                  created_by: created_by\n                }\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios(option);\n\n            case 5:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result.data);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              return _context2.abrupt(\"return\", _context2.t0.response.data);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[2, 9]]);\n    }));\n\n    return function company(_x3, _x4, _x5, _x6) {\n      return _company.apply(this, arguments);\n    };\n  }(),\n  getListItem: function () {\n    var _getListItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(path) {\n      var token, option, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem(apiconfig.LS.TOKEN);\n              option = {\n                url: apiconfig.BASE_URL + path,\n                method: \"get\",\n                headers: {\n                  \"authorization\": token\n                }\n              };\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios(option);\n\n            case 5:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response.data.message);\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[2, 9]]);\n    }));\n\n    return function getListItem(_x7) {\n      return _getListItem.apply(this, arguments);\n    };\n  }()\n};\nexport default API;","map":{"version":3,"sources":["/home/mifadhilah/Documents/XSIS/Mini Project/marcom/markom-apps/src/helpers/API.js"],"names":["axios","apiconfig","API","login","username","password","option","url","BASE_URL","ENDPOINTS","LOGIN","method","headers","data","result","response","company","code","name","created_date","created_by","token","localStorage","getItem","LS","TOKEN","COMPANY","getListItem","path","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAGA,IAAMC,GAAG,GAAG;AACRC,EAAAA,KAAK;AAAA;AAAA;AAAA,6BAAE,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,cAAAA,MADD,GACU;AACTC,gBAAAA,GAAG,EAAEN,SAAS,CAACO,QAAV,GAAmBP,SAAS,CAACQ,SAAV,CAAoBC,KADnC;AAETC,gBAAAA,MAAM,EAAE,MAFC;AAGTC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAHA;AAMTC,gBAAAA,IAAI,EAAE;AACFT,kBAAAA,QAAQ,EAAEA,QADR;AAEFC,kBAAAA,QAAQ,EAAEA;AAFR;AANG,eADV;AAAA;AAAA;AAAA,qBAaoBL,KAAK,CAACM,MAAD,CAbzB;;AAAA;AAaKQ,cAAAA,MAbL;AAAA,+CAcQA,MAAM,CAACD,IAdf;;AAAA;AAAA;AAAA;AAAA,+CAgBQ,YAAME,QAAN,CAAeF,IAhBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;AAAA,KADG;AAqBRG,EAAAA,OAAO;AAAA;AAAA;AAAA,6BAAE,kBAAMC,IAAN,EAAYC,IAAZ,EAAkBC,YAAlB,EAAgCC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,cAAAA,KADC,GACKC,YAAY,CAACC,OAAb,CAAqBtB,SAAS,CAACuB,EAAV,CAAaC,KAAlC,CADL;AAEDnB,cAAAA,MAFC,GAEM;AACPC,gBAAAA,GAAG,EAAEN,SAAS,CAACO,QAAV,GAAmBP,SAAS,CAACQ,SAAV,CAAoBiB,OADrC;AAEPf,gBAAAA,MAAM,EAAE,KAFD;AAGPC,gBAAAA,OAAO,EAAE;AACL,mCAAiBS;AADZ,iBAHF;AAMPR,gBAAAA,IAAI,EAAC;AACDI,kBAAAA,IAAI,EAAEA,IADL;AAEDC,kBAAAA,IAAI,EAAEA,IAFL;AAGDC,kBAAAA,YAAY,EAAEA,YAHb;AAIDC,kBAAAA,UAAU,EAAEA;AAJX;AANE,eAFN;AAAA;AAAA;AAAA,qBAgBkBpB,KAAK,CAACM,MAAD,CAhBvB;;AAAA;AAgBGQ,cAAAA,MAhBH;AAAA,gDAiBMA,MAAM,CAACD,IAjBb;;AAAA;AAAA;AAAA;AAAA,gDAmBM,aAAME,QAAN,CAAeF,IAnBrB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;AAAA,KArBC;AA2CRc,EAAAA,WAAW;AAAA;AAAA;AAAA,6BAAE,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLP,cAAAA,KADK,GACGC,YAAY,CAACC,OAAb,CAAqBtB,SAAS,CAACuB,EAAV,CAAaC,KAAlC,CADH;AAELnB,cAAAA,MAFK,GAEI;AACTC,gBAAAA,GAAG,EAAEN,SAAS,CAACO,QAAV,GAAqBoB,IADjB;AAETjB,gBAAAA,MAAM,EAAE,KAFC;AAGTC,gBAAAA,OAAO,EAAE;AACL,mCAAiBS;AADZ;AAHA,eAFJ;AAAA;AAAA;AAAA,qBAUgBrB,KAAK,CAACM,MAAD,CAVrB;;AAAA;AAUDS,cAAAA,QAVC;AAAA,gDAWEA,QAAQ,CAACF,IAAT,CAAcgB,OAXhB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;AAAA;AA3CH,CAAZ;AA8DA,eAAe3B,GAAf","sourcesContent":["import axios from 'axios'\nimport apiconfig from '../configs/api.config.json'\n\n\nconst API = {\n    login: async (username, password) => {\n        let option = {\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\n                username: username,\n                password: password\n            }\n        }\n        try {\n            let result = await axios(option)\n            return result.data\n        } catch (error) {\n            return error.response.data\n\n        }\n    },\n    company: async(code, name, created_date, created_by)=>{\n        let token=localStorage.getItem(apiconfig.LS.TOKEN)\n        let option={\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.COMPANY,\n            method: \"GET\",\n            headers: {\n                \"authorization\": token\n            },\n            data:{\n                code: code,\n                name: name,\n                created_date: created_date,\n                created_by: created_by\n            }\n        }\n        try {\n            let result = await axios(option)\n            return result.data\n        } catch(error){\n            return error.response.data\n        }\n    },\n    getListItem: async (path) => {\n        let token = localStorage.getItem(apiconfig.LS.TOKEN)\n        let option = {\n            url: apiconfig.BASE_URL + path,\n            method: \"get\",\n            headers: {\n                \"authorization\": token\n            }\n        }\n        try {\n            let response = await axios(option)\n            return response.data.message\n        }\n        catch(error) {\n            return error\n        }\n    }\n}\n\nexport default API\n"]},"metadata":{},"sourceType":"module"}